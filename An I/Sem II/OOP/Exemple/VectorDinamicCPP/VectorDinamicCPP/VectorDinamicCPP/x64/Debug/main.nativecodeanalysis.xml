<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class VectorDinamic&lt;class Pet&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$VectorDinamic@VPet@@@@QEAA@AEBV0@@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>58</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$VectorDinamic@VPet@@@@QEAA@AEBV0@@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>52</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor should not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$VectorDinamic@VPet@@@@QEAA@XZ</DECORATED>
    <FUNCLINE>52</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>52</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$VectorDinamic@VPet@@@@QEAA@XZ</DECORATED>
    <FUNCLINE>52</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>76</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::=</FUNCTION>
    <DECORATED>??4?$VectorDinamic@VPet@@@@QEAAAEAV0@AEBV0@@Z</DECORATED>
    <FUNCLINE>72</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>99</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::get</FUNCTION>
    <DECORATED>?get@?$VectorDinamic@VPet@@@@QEBAAEAVPet@@H@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>181</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'VectorDinamic&lt;Pet&gt;::begin' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::begin</FUNCTION>
    <DECORATED>?begin@?$VectorDinamic@VPet@@@@QEBA?AV?$Iterator@VPet@@@@XZ</DECORATED>
    <FUNCLINE>181</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>186</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'VectorDinamic&lt;Pet&gt;::end' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::end</FUNCTION>
    <DECORATED>?end@?$VectorDinamic@VPet@@@@QEBA?AV?$Iterator@VPet@@@@XZ</DECORATED>
    <FUNCLINE>186</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>118</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::ensureCapacity</FUNCTION>
    <DECORATED>?ensureCapacity@?$VectorDinamic@VPet@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>118</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::ensureCapacity</FUNCTION>
    <DECORATED>?ensureCapacity@?$VectorDinamic@VPet@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>150</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Iterator&lt;Pet&gt;::element' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Iterator&lt;Pet&gt;::element</FUNCTION>
    <DECORATED>?element@?$Iterator@VPet@@@@QEBAAEAVPet@@XZ</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\UBB-FMI\An I\Sem II\OOP\Exemple\VectorDinamicCPP\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>155</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Iterator&lt;Pet&gt;::urmator' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Iterator&lt;Pet&gt;::urmator</FUNCTION>
    <DECORATED>?urmator@?$Iterator@VPet@@@@QEAAXXZ</DECORATED>
    <FUNCLINE>155</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>