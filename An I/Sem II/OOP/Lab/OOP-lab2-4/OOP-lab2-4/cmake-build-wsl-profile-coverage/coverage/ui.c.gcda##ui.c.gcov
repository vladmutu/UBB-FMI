        -:    0:Source:/mnt/c/Users/Omen/CLionProjects/OOP-lab2-4/ui.c
        -:    0:Graph:/mnt/c/Users/Omen/CLionProjects/OOP-lab2-4/cmake-build-wsl-profile-coverage/CMakeFiles/OOP_lab2_4.dir/ui.c.gcno
        -:    0:Data:/mnt/c/Users/Omen/CLionProjects/OOP-lab2-4/cmake-build-wsl-profile-coverage/CMakeFiles/OOP_lab2_4.dir/ui.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:#include "medicament.h"
        -:    3:#include "myList.h"
        -:    4:#include "service.h"
        -:    5:#include "ui.h"
        -:    6:#include "teste.h"
function updateMed called 0 returned 0% blocks executed 0%
    #####:    7:void updateMed(Farmacie* list)
        -:    8:{
    #####:    9:    printf("Introduceti Id-ul:\n");
    %%%%%:    9-block  0
call    0 never executed
        -:   10:    int id;
    #####:   11:    scanf("%d",&id);
call    0 never executed
    #####:   12:    printf("Introduceti noua concentratie:\n");
call    0 never executed
        -:   13:    float concentratie;
    #####:   14:    scanf("%f",&concentratie);
call    0 never executed
    #####:   15:    printf("Introducceti noul nume:\n");
call    0 never executed
        -:   16:    char nume[30];
    #####:   17:    scanf("%s",nume);
call    0 never executed
    #####:   18:    if (!updateEnt(list,id,nume,concentratie))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   19:        printf("Modificarea a avut loc cu succes!\n");
    %%%%%:   19-block  0
call    0 never executed
        -:   20:    else
    #####:   21:        printf("Medicamentul cu id-ul dat nu exista!\n");
    %%%%%:   21-block  0
call    0 never executed
        -:   22:
    #####:   23:}
function readMed called 0 returned 0% blocks executed 0%
    #####:   24:void readMed(Farmacie* list)
        -:   25:{
    #####:   26:    printf("Introduceti id:\n");
    %%%%%:   26-block  0
call    0 never executed
    #####:   27:    int id=-1;
    #####:   28:    scanf("%d",&id);
call    0 never executed
    #####:   29:    if (!checkId(list, id))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   30:    {
    #####:   31:        printf("Introduceti nume:\n");
    %%%%%:   31-block  0
call    0 never executed
        -:   32:        char nume[30];
    #####:   33:        scanf("%s", nume);
call    0 never executed
    #####:   34:        printf("Introduceti concentratie:\n");
call    0 never executed
        -:   35:        float concentratie;
    #####:   36:        scanf("%f", &concentratie);
call    0 never executed
    #####:   37:        printf("Introduceti stoc:\n");
call    0 never executed
        -:   38:        int stoc;
    #####:   39:        scanf("%d", &stoc);
call    0 never executed
        -:   40:
    #####:   41:        if(addEnt(list, id, nume, concentratie, stoc))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   42:            printf("Produsul a fost adaugat cu succes!\n");
    %%%%%:   42-block  0
call    0 never executed
        -:   43:        else
    #####:   44:            printf("Medicament invalid!\n");
    %%%%%:   44-block  0
call    0 never executed
        -:   45:    }
        -:   46:    else
        -:   47:    {
    #####:   48:        addStoc(list, id);
    %%%%%:   48-block  0
call    0 never executed
    #####:   49:        printf("Stocul a fost actualizat cu succes!\n");
call    0 never executed
        -:   50:    }
        -:   51:
        -:   52:
    #####:   53:}
        -:   54:
function printFarmacie called 0 returned 0% blocks executed 0%
    #####:   55:void printFarmacie(Farmacie* list)
        -:   56:{
    #####:   57:    for(int i = 0; i< list->lista->dimensiune;i++)
    %%%%%:   57-block  0
    %%%%%:   57-block  1
branch  0 never executed
branch  1 never executed
        -:   58:    {
    #####:   59:        Medicament* m = get(list->lista,i);
    %%%%%:   59-block  0
call    0 never executed
    #####:   60:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n",m->id,m->nume,m->concentratie,m->stoc);
call    0 never executed
        -:   61:    }
    #####:   62:}
        -:   63:
function deleteMed called 0 returned 0% blocks executed 0%
    #####:   64:void deleteMed(Farmacie* list)
        -:   65:{
    #####:   66:    printf("Id-ul medicamentului pe care doriti sa il stergeti:\n");
    %%%%%:   66-block  0
call    0 never executed
        -:   67:    int id;
    #####:   68:    scanf("%d",&id);
call    0 never executed
    #####:   69:    if(!deleteEnt(list,id))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   70:        printf("Acest medicament nu exista!\n");
    %%%%%:   70-block  0
call    0 never executed
        -:   71:    else
    #####:   72:        printf("Medicament sters cu succes!\n");
    %%%%%:   72-block  0
call    0 never executed
    #####:   73:}
function destroy called 0 returned 0% blocks executed 0%
    #####:   74:void destroy(Farmacie *list)
        -:   75:{
    #####:   76:    destroyAll(list);
    %%%%%:   76-block  0
call    0 never executed
        -:   77:
    #####:   78:}
        -:   79:
function sortNumeCresc called 0 returned 0% blocks executed 0%
    #####:   80:void sortNumeCresc(Farmacie* list)
        -:   81:{
    #####:   82:    List* f = sortareNume(list);
    %%%%%:   82-block  0
call    0 never executed
    #####:   83:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:   83-block  0
branch  0 never executed
branch  1 never executed
        -:   84:    {
    #####:   85:        Medicament* m = get(f,i);
    %%%%%:   85-block  0
call    0 never executed
    #####:   86:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:   87:    }
        -:   88:
    #####:   89:    destroyList(f);
    %%%%%:   89-block  0
call    0 never executed
        -:   90:
    #####:   91:}
        -:   92:
function sortNumeDesc called 0 returned 0% blocks executed 0%
    #####:   93:void sortNumeDesc(Farmacie* list)
        -:   94:{
    #####:   95:    List* f = sortareNume(list);
    %%%%%:   95-block  0
call    0 never executed
    #####:   96:    for(int i=f->dimensiune-1;i>=0;i--)
    %%%%%:   96-block  0
branch  0 never executed
branch  1 never executed
        -:   97:    {
    #####:   98:        Medicament* m = get(f,i);
    %%%%%:   98-block  0
call    0 never executed
    #####:   99:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  100:    }
        -:  101:
    #####:  102:    destroyList(f);
    %%%%%:  102-block  0
call    0 never executed
    #####:  103:}
        -:  104:
function sortStocCresc called 0 returned 0% blocks executed 0%
    #####:  105:void sortStocCresc(Farmacie* list)
        -:  106:{
    #####:  107:    List* f = sortareStoc(list);
    %%%%%:  107-block  0
call    0 never executed
    #####:  108:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:  108-block  0
branch  0 never executed
branch  1 never executed
        -:  109:    {
    #####:  110:        Medicament* m = get(f,i);
    %%%%%:  110-block  0
call    0 never executed
    #####:  111:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  112:    }
        -:  113:
    #####:  114:    destroyList(f);
    %%%%%:  114-block  0
call    0 never executed
    #####:  115:}
        -:  116:
function sortStocDesc called 0 returned 0% blocks executed 0%
    #####:  117:void sortStocDesc(Farmacie* list)
        -:  118:{
    #####:  119:    List* f = sortareStoc(list);
    %%%%%:  119-block  0
call    0 never executed
    #####:  120:    for(int i=f->dimensiune-1;i>=0;i--)
    %%%%%:  120-block  0
branch  0 never executed
branch  1 never executed
        -:  121:    {
    #####:  122:        Medicament* m = get(f,i);
    %%%%%:  122-block  0
call    0 never executed
    #####:  123:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  124:    }
    #####:  125:    destroyList(f);
    %%%%%:  125-block  0
call    0 never executed
    #####:  126:}
        -:  127:
function filtrareStoc called 0 returned 0% blocks executed 0%
    #####:  128:void filtrareStoc(Farmacie* list)
        -:  129:{
    #####:  130:    printf("Dati o valoare intrega, pozitiva, nenula:\n");
    %%%%%:  130-block  0
call    0 never executed
        -:  131:    int val;
    #####:  132:    scanf("%d",&val);
call    0 never executed
    #####:  133:    List* f = filterStoc(list, val);
call    0 never executed
    #####:  134:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:  134-block  0
branch  0 never executed
branch  1 never executed
        -:  135:    {
    #####:  136:        Medicament* m = get(f,i);
    %%%%%:  136-block  0
call    0 never executed
    #####:  137:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  138:    }
        -:  139:
    #####:  140:    destroyList(f);
    %%%%%:  140-block  0
call    0 never executed
        -:  141:
    #####:  142:}
        -:  143:
function filtrareNume called 0 returned 0% blocks executed 0%
    #####:  144:void filtrareNume(Farmacie* list)
        -:  145:{
    #####:  146:    printf("Dati o litera:");
    %%%%%:  146-block  0
call    0 never executed
        -:  147:    char litera[2];
    #####:  148:    scanf("%s",litera);
call    0 never executed
    #####:  149:    List* f = filterNume(list, litera[0]);
call    0 never executed
    #####:  150:    for(int i=0;i<f->dimensiune;i++)
    %%%%%:  150-block  0
branch  0 never executed
branch  1 never executed
        -:  151:    {
    #####:  152:        Medicament* m = get(f,i);
    %%%%%:  152-block  0
call    0 never executed
    #####:  153:        printf("Id: %d; Nume: %s; Concentratie: %f; Stoc: %d\n", m->id, m->nume,m->concentratie, m->stoc);
call    0 never executed
        -:  154:    }
        -:  155:
    #####:  156:    destroyList(f);
    %%%%%:  156-block  0
call    0 never executed
    #####:  157:}
        -:  158:
function run called 0 returned 0% blocks executed 0%
    #####:  159:void run()
        -:  160:{
    #####:  161:    Farmacie list = createFarmacie();
    %%%%%:  161-block  0
call    0 never executed
        -:  162:
        -:  163:    while(1)
    #####:  164:    {
        -:  165:        int cmd;
    #####:  166:        printf("0. Exit; 1. Adaugare; 2. Modificare; 3.Stergere; 4.Afisare farmacie;\n"
    %%%%%:  166-block  0
call    0 never executed
        -:  167:               "5. Sortare nume crescator; 6. Sortare nume descrescator; 7. Sortare stoc crescator;\n"
        -:  168:               "8. Sortare stoc descrescator; 9. Filtrare stoc; 10. Filtrare nume\n");
    #####:  169:        scanf("%d",&cmd);
call    0 never executed
    #####:  170:        if(cmd == 1)
branch  0 never executed
branch  1 never executed
    #####:  171:            readMed(&list);
    %%%%%:  171-block  0
call    0 never executed
    #####:  172:        else if(cmd == 2)
    %%%%%:  172-block  0
branch  0 never executed
branch  1 never executed
    #####:  173:            updateMed(&list);
    %%%%%:  173-block  0
call    0 never executed
    #####:  174:        else if(cmd == 3)
    %%%%%:  174-block  0
branch  0 never executed
branch  1 never executed
    #####:  175:           deleteMed(&list);
    %%%%%:  175-block  0
call    0 never executed
    #####:  176:        else if(cmd == 4)
    %%%%%:  176-block  0
branch  0 never executed
branch  1 never executed
    #####:  177:            printFarmacie(&list);
    %%%%%:  177-block  0
call    0 never executed
    #####:  178:        else if(cmd == 5)
    %%%%%:  178-block  0
branch  0 never executed
branch  1 never executed
    #####:  179:            sortNumeCresc(&list);
    %%%%%:  179-block  0
call    0 never executed
    #####:  180:        else if(cmd == 6)
    %%%%%:  180-block  0
branch  0 never executed
branch  1 never executed
    #####:  181:            sortNumeDesc(&list);
    %%%%%:  181-block  0
call    0 never executed
    #####:  182:        else if(cmd == 7)
    %%%%%:  182-block  0
branch  0 never executed
branch  1 never executed
    #####:  183:            sortStocCresc(&list);
    %%%%%:  183-block  0
call    0 never executed
    #####:  184:        else if(cmd == 8)
    %%%%%:  184-block  0
branch  0 never executed
branch  1 never executed
    #####:  185:            sortStocDesc(&list);
    %%%%%:  185-block  0
call    0 never executed
    #####:  186:        else if(cmd == 9)
    %%%%%:  186-block  0
branch  0 never executed
branch  1 never executed
    #####:  187:            filtrareStoc(&list);
    %%%%%:  187-block  0
call    0 never executed
    #####:  188:        else if(cmd == 10)
    %%%%%:  188-block  0
branch  0 never executed
branch  1 never executed
    #####:  189:            filtrareNume(&list);
    %%%%%:  189-block  0
call    0 never executed
    #####:  190:        else if(cmd==0)
    %%%%%:  190-block  0
branch  0 never executed
branch  1 never executed
        -:  191:            {
    #####:  192:                break;
        -:  193:            }
        -:  194:    }
        -:  195:
    #####:  196:    destroy(&list);
    %%%%%:  196-block  0
call    0 never executed
        -:  197:
    #####:  198:}
        -:  199:
function main called 1 returned 100% blocks executed 100%
        1:  200:int main()
        -:  201:{
        1:  202:    runAllTests();
        1:  202-block  0
call    0 returned 1
        -:  203:    //run();
        -:  204:
        1:  205:    return 0;
        -:  206:}
