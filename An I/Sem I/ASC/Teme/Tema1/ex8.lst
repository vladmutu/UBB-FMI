     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 03                          a db 3
    15 00000001 03                          b db 3
    16 00000002 01                          c db 1
    17 00000003 0600                        d dw 6
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A0[00000000]                    mov AL, [a]
    23 00000005 B60A                            mov DH, 10
    24 00000007 F6E6                            mul DH
    25 00000009 6689C3                          mov BX, AX
    26 0000000C A0[01000000]                    mov AL, [b]
    27 00000011 B605                            mov DH, 5
    28 00000013 F6E6                            mul DH
    29 00000015 6629C3                          sub BX, AX
    30 00000018 A0[02000000]                    mov AL, [c]
    31 0000001D B605                            mov DH, 5
    32 0000001F F6E6                            mul DH
    33 00000021 668B0D[03000000]                mov CX, [d]
    34 00000028 6629C1                          sub CX, AX
    35 0000002B 6601CB                          add BX, CX
    36 0000002E 6689D8                          mov AX, BX
    37                                          ; exit(0)
    38 00000031 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 00000033 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
