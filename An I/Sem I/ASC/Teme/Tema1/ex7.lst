     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                          a db 2
    15 00000001 05                          b db 5
    16 00000002 06                          c db 6
    17 00000003 0600                        d dw 6
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A0[01000000]                    mov AL, [b]
    23 00000005 2A05[00000000]                  sub AL, [a]
    24 0000000B 0402                            add AL, 2
    25 0000000D B614                            mov DH, 20
    26 0000000F F6E6                            mul DH
    27 00000011 6689C3                          mov BX, AX
    28 00000014 A0[02000000]                    mov AL, [c]
    29 00000019 B60A                            mov DH, 10
    30 0000001B F6E6                            mul DH
    31 0000001D 6629C3                          sub BX, AX
    32 00000020 6689D8                          mov AX, BX
    33 00000023 66BA0300                        mov DX, 3
    34 00000027 66F7E2                          mul DX
    35 0000002A 6689C3                          mov BX, AX
    36 0000002D A0[03000000]                    mov AL, [d]
    37 00000032 2C03                            sub AL, 3
    38 00000034 B602                            mov DH, 2
    39 00000036 F6E6                            mul DH
    40 00000038 6601C3                          add BX, AX
    41 0000003B 6689D8                          mov AX, BX
    42                                          ; exit(0)
    43 0000003E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 00000040 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
