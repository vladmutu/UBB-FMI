     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 63616E646261647577-         s db "candbaduwa"
    16 00000009 61                 
    17                                      len equ $-s
    18 0000000A 00000000                    c dd 0
    19 0000000E 00000000                    freq dd 0
    20 00000012 496E74726F64756365-         message db "Introduceti caracterul: ", 0
    20 0000001B 746920636172616374-
    20 00000024 6572756C3A2000     
    21 0000002B 256300                      format_1 db "%c", 0
    22 0000002E 2C20256400                  format_2 db ", %d", 0
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27                                          ;afisam mesaj
    28 00000000 68[12000000]                    push dword message
    29 00000005 FF15[00000000]                  call [printf]
    30 0000000B 83C404                          add esp, 4*1
    31                                          
    32                                          ;citim caracterul
    33 0000000E 68[0A000000]                    push dword c
    34 00000013 68[2B000000]                    push dword format_1
    35 00000018 FF15[00000000]                  call [scanf]
    36 0000001E 83C408                          add esp, 4*2
    37                                          
    38 00000021 FC                              cld
    39 00000022 BE[00000000]                    mov esi, s
    40 00000027 8B1D[0A000000]                  mov ebx, [c]
    41 0000002D BA00000000                      mov edx, 0
    42 00000032 B90A000000                      mov ecx, len
    43 00000037 E33A                            jecxz final
    44                                          repeta:
    45 00000039 AC                                  lodsb
    46 0000003A 3A05[0A000000]                      cmp al, [c]
    47 00000040 7501                                jne next
    48 00000042 42                                  inc edx
    49                                              next:
    50 00000043 E2F4                                loop repeta
    51                                              
    52 00000045 8915[0E000000]                  mov [freq], edx ; freq = frecventa caracterului citit
    53                                          
    54                                          ;afisam caracterul
    55 0000004B FF35[0A000000]                  push dword [c]
    56 00000051 68[2B000000]                    push dword format_1
    57 00000056 FF15[00000000]                  call [printf]
    58 0000005C 83C408                          add esp, 4*2
    59                                          
    60                                          
    61                                          ;afisam frecventa caracterului
    62 0000005F FF35[0E000000]                  push dword [freq]
    63 00000065 68[2E000000]                    push dword format_2
    64 0000006A FF15[00000000]                  call [printf]
    65 00000070 83C408                          add esp, 4*2
    66                                          
    67                                          final:
    68                                          ; exit(0)
    69 00000073 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    70 00000075 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
