     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02010303040206              a db 2, 1, 3, 3, 4, 2, 6
    15                                      L1 equ $-a
    16 00000007 040507060201                b db 4, 5, 7, 6, 2, 1
    17                                      L2 equ $-b
    18 0000000D 00<rept>                    r times L1+L2 db 0
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B906000000                      mov ecx,L2
    24 00000005 E348                            jecxz final
    25 00000007 BE00000000                      mov esi,0
    26 0000000C BF06000000                      mov edi,L2
    27                                          repeta1:
    28 00000011 8A86[07000000]                      mov al,[b+esi]
    29 00000017 8887[0D000000]                      mov [r+edi],al
    30 0000001D 4F                                  dec edi 
    31 0000001E 46                                  inc esi
    32 0000001F E2F0                            loop repeta1
    33 00000021 B907000000                      mov ecx,L1
    34 00000026 E327                            jecxz final
    35 00000028 BE00000000                      mov esi,0
    36 0000002D BF06000000                      mov edi,L2
    37 00000032 83C701                          add edi, 1
    38                                          repeta2:
    39 00000035 8A86[00000000]                      mov al,[a+esi]
    40 0000003B 88C3                                mov bl,al
    41 0000003D 80E301                              and bl,00000001b
    42 00000040 80FB01                              cmp bl, 1
    43 00000043 7407                                je next
    44 00000045 8887[0D000000]                      mov [r+edi],al
    45 0000004B 47                                  inc edi
    46                                              next:
    47 0000004C 46                                  inc esi
    48 0000004D E2E6                            loop repeta2
    49                                          final:
    50                                          ; exit(0)
    51 0000004F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 00000051 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
