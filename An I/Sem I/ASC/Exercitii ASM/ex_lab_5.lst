     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0102030405060708            s db 1,2,3,4,5,6,7,8
    15                                      L equ $-s
    16                                      jumatateL equ (L+1)/2
    17 00000008 00<rept>                    d times L db 0
    18                                      ;Se da un sir de octeti S. Sa se construiasca sirul D astfel: sa se puna mai intai elementele ;de pe pozitiile pare din S iar apoi elementele de pe pozitiile impare din S.
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B908000000                      mov ecx,L ;punem in ecx lungimea pentru a repeta bucla de ecx=L ori
    24 00000005 BE00000000                      mov esi,0
    25 0000000A BF00000000                      mov edi,0
    26 0000000F E331                            jecxz Sfarsit
    27                                          Repeta:
    28 00000011 BA00000000                          mov edx,0
    29 00000016 89F0                                mov eax,esi
    30 00000018 BB02000000                          mov ebx,2
    31 0000001D F7F3                                div ebx
    32 0000001F 83FA00                              cmp edx,0
    33 00000022 740F                                je pozPara
    34 00000024 8A86[00000000]                      mov al,[s+esi]
    35 0000002A 8887[0C000000]                      mov [d+edi+jumatateL],al
    36 00000030 47                                  inc edi
    37 00000031 EB0C                                jmp dupa
    38                                              pozPara:
    39 00000033 8A86[00000000]                      mov al,[s+esi]
    40 00000039 8887[08000000]                      mov [d+edi],al
    41                                              dupa:
    42 0000003F 46                                  inc esi
    43 00000040 E2CF                            loop Repeta
    44                                          ; exit(0)
    45                                          Sfarsit:
    46 00000042 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    47 00000044 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
