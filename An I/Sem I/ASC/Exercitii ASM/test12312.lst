     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,printf
     8                                  extern vocale              ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll
    10                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 444433331111222288-         s1 dq 2222111133334444h,6666555577778888h
    16 00000009 88777755556666     
    17                                      len equ ($-s1)/8
    18 00000010 00000000<rept>              s2 times 100 dd 0
    19 000001A0 00000000                    len2 dd 0
    20 000001A4 256400                      format db "%d", 0
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 B902000000                      mov ecx, len
    26 00000005 E350                            jecxz final
    27 00000007 BE[00000000]                    mov esi, s1
    28 0000000C BF[10000000]                    mov edi, s2
    29                                          
    30                                          repeta:
    31                                          
    32 00000011 FC                                  cld
    33 00000012 83C604                              add esi, 4
    34 00000015 AD                                  lodsd
    35 00000016 50                                  push eax
    36 00000017 50                                  push eax
    37 00000018 F8                                  clc
    38 00000019 C1E010                              shl eax, 16
    39 0000001C F8                                  clc
    40 0000001D C1E810                              shr eax, 16
    41 00000020 89C3                                mov ebx, eax
    42 00000022 58                                  pop eax
    43 00000023 F8                                  clc
    44 00000024 C1E810                              shr eax, 16
    45                                              
    46 00000027 39D8                                cmp eax, ebx
    47                                              
    48 00000029 7E0B                                jle not_ok
    49 0000002B 58                                  pop eax
    50 0000002C AB                                  stosd
    51 0000002D 8305[A0010000]01                    add dword [len2], 1
    52 00000034 EB01                                jmp next
    53                                              not_ok:
    54 00000036 58                                  pop eax
    55                                              next:
    56 00000037 E2D8                            loop repeta
    57                                          
    58 00000039 53                              push ebx
    59                                          
    60 0000003A 68[10000000]                    push dword s2
    61 0000003F FF35[A0010000]                  push dword [len2]
    62 00000045 E8(00000000)                    call vocale
    63                                          
    64 0000004A 5B                              pop ebx
    65                                          
    66 0000004B 50                              push eax
    67 0000004C 68[A4010000]                    push dword format
    68 00000051 FF15[00000000]                  call [printf]
    69                                          
    70                                          final:
    71                                          ; exit(0)
    72 00000057 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    73 00000059 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
